{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function About(props){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-bg-\".concat(props.mode),children:\"About Us\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"accordion\",id:\"accordionExample\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-item text-bg-\".concat(props.mode),children:[/*#__PURE__*/_jsx(\"h2\",{className:\"accordion-header\",children:/*#__PURE__*/_jsx(\"button\",{className:\"accordion-button text-{}\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseOne\",\"aria-expanded\":\"true\",\"aria-controls\":\"collapseOne\",children:\"Accordion Item #1\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"collapseOne\",className:\"accordion-collapse collapse show\",\"data-bs-parent\":\"#accordionExample\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-body\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"This is the first item's accordion body.\"}),\" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/_jsx(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-2\"})]})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","About","props","children","className","concat","mode","id","type"],"sources":["D:/Web Development/reactjs/src/component/About.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function About(props) {\r\n  \r\n  return (\r\n    <>\r\n      <h1 className={`text-bg-${props.mode}`}>About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" >\r\n        <div className={`accordion-item text-bg-${props.mode}`}>\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button text-{}\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container my-2\">\r\n          \r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAExC,cAAe,SAAS,CAAAC,KAAKA,CAACC,KAAK,CAAE,CAEnC,mBACEJ,KAAA,CAAAE,SAAA,EAAAG,QAAA,eACEP,IAAA,OAAIQ,SAAS,YAAAC,MAAA,CAAaH,KAAK,CAACI,IAAI,CAAG,CAAAH,QAAA,CAAC,UAAQ,CAAI,CAAC,cACrDL,KAAA,QAAKM,SAAS,CAAC,WAAW,CAACG,EAAE,CAAC,kBAAkB,CAAAJ,QAAA,eAC9CL,KAAA,QAAKM,SAAS,2BAAAC,MAAA,CAA4BH,KAAK,CAACI,IAAI,CAAG,CAAAH,QAAA,eACrDP,IAAA,OAAIQ,SAAS,CAAC,kBAAkB,CAAAD,QAAA,cAC9BP,IAAA,WACEQ,SAAS,CAAC,0BAA0B,CACpCI,IAAI,CAAC,QAAQ,CACb,iBAAe,UAAU,CACzB,iBAAe,cAAc,CAC7B,gBAAc,MAAM,CACpB,gBAAc,aAAa,CAAAL,QAAA,CAC5B,mBAED,CAAQ,CAAC,CACP,CAAC,cACLP,IAAA,QACEW,EAAE,CAAC,aAAa,CAChBH,SAAS,CAAC,kCAAkC,CAC5C,iBAAe,mBAAmB,CAAAD,QAAA,cAElCL,KAAA,QAAKM,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7BP,IAAA,WAAAO,QAAA,CAAQ,0CAAwC,CAAQ,CAAC,6WAMxB,cAAAP,IAAA,SAAAO,QAAA,CAAM,iBAAe,CAAM,CAAC,+CAE/D,EAAK,CAAC,CACH,CAAC,EACH,CAAC,cAENP,IAAA,QAAKQ,SAAS,CAAC,gBAAgB,CAE1B,CAAC,EACH,CAAC,EACN,CAAC,CAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}