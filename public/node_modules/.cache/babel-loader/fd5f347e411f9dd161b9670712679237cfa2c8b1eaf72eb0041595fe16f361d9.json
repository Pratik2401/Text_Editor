{"ast":null,"code":"import React,{useState}from'react';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import Navbar from'./component/Navbar';import TextForm from'./component/TextForm';import Alert from'./component/Alert';import About from'./component/About';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState('light');const[textMode,setTextMode]=useState('dark');const[alert,setAlert]=useState(null);const showAlert=(message,type)=>{setAlert({msg:message,type:type});setTimeout(()=>{setAlert(null);},1500);};const toggleMode=()=>{if(mode===\"light\"){setMode(\"dark\");setTextMode(\"light\");document.body.style.backgroundColor=\"#212529\";showAlert(\"Dark Mode has been enabled\",\"success\");document.title=\"Text Editor - Dark Edition\";}else{setMode(\"light\");setTextMode(\"dark\");document.body.style.backgroundColor=\"white\";showAlert(\"Light Mode has been enabled\",'success');document.title=\"Text Editor - Light Edition\";}};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{title:\"Text Editor\",mode:mode,toggleMode:toggleMode,text:textMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{mode:mode,toggleMode:toggleMode,text:textMode})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter Text Here\",mode:mode,toggleMode:toggleMode,text:textMode,showAlert:showAlert})})]})]})});}export default App;","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navbar","TextForm","Alert","About","jsx","_jsx","jsxs","_jsxs","App","mode","setMode","textMode","setTextMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","text","path","element","heading"],"sources":["D:/Web Development/reactjs/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/TextForm';\nimport Alert from './component/Alert';\nimport About from './component/About';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [textMode, setTextMode] = useState('dark');\n  const [alert, setAlert] = useState(null);\n  \n  const showAlert = (message, type) => {\n    setAlert({ msg: message, type: type });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      setTextMode(\"light\");\n      document.body.style.backgroundColor = \"#212529\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = \"Text Editor - Dark Edition\";\n    } else {\n      setMode(\"light\");\n      setTextMode(\"dark\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", 'success');\n      document.title = \"Text Editor - Light Edition\";\n    }\n  }\n\n  return (\n    <Router>\n      <div>\n        <Navbar title=\"Text Editor\" mode={mode} toggleMode={toggleMode} text={textMode}/>\n        <Alert alert={alert}/>\n        <Routes>\n          <Route path=\"/about\" element={<About mode={mode} toggleMode={toggleMode} text={textMode} />} />\n          <Route path=\"/\" element={<TextForm heading=\"Enter Text Here\" mode={mode} toggleMode={toggleMode} text={textMode} showAlert={showAlert} />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,MAAM,KAAM,oBAAoB,CACvC,MAAO,CAAAC,QAAQ,KAAM,sBAAsB,CAC3C,MAAO,CAAAC,KAAK,KAAM,mBAAmB,CACrC,MAAO,CAAAC,KAAK,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEtC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAAC,OAAO,CAAC,CACzC,KAAM,CAACgB,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,MAAM,CAAC,CAChD,KAAM,CAACkB,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAoB,SAAS,CAAGA,CAACC,OAAO,CAAEC,IAAI,GAAK,CACnCH,QAAQ,CAAC,CAAEI,GAAG,CAAEF,OAAO,CAAEC,IAAI,CAAEA,IAAK,CAAC,CAAC,CACtCE,UAAU,CAAC,IAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,KAAM,CAAAM,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAIX,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfE,WAAW,CAAC,OAAO,CAAC,CACpBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CAClDM,QAAQ,CAACI,KAAK,CAAG,4BAA4B,CAC/C,CAAC,IAAM,CACLf,OAAO,CAAC,OAAO,CAAC,CAChBE,WAAW,CAAC,MAAM,CAAC,CACnBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACnDM,QAAQ,CAACI,KAAK,CAAG,6BAA6B,CAChD,CACF,CAAC,CAED,mBACEpB,IAAA,CAACR,MAAM,EAAA6B,QAAA,cACLnB,KAAA,QAAAmB,QAAA,eACErB,IAAA,CAACL,MAAM,EAACyB,KAAK,CAAC,aAAa,CAAChB,IAAI,CAAEA,IAAK,CAACW,UAAU,CAAEA,UAAW,CAACO,IAAI,CAAEhB,QAAS,CAAC,CAAC,cACjFN,IAAA,CAACH,KAAK,EAACW,KAAK,CAAEA,KAAM,CAAC,CAAC,cACtBN,KAAA,CAACT,MAAM,EAAA4B,QAAA,eACLrB,IAAA,CAACN,KAAK,EAAC6B,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAExB,IAAA,CAACF,KAAK,EAACM,IAAI,CAAEA,IAAK,CAACW,UAAU,CAAEA,UAAW,CAACO,IAAI,CAAEhB,QAAS,CAAE,CAAE,CAAE,CAAC,cAC/FN,IAAA,CAACN,KAAK,EAAC6B,IAAI,CAAC,GAAG,CAACC,OAAO,cAAExB,IAAA,CAACJ,QAAQ,EAAC6B,OAAO,CAAC,iBAAiB,CAACrB,IAAI,CAAEA,IAAK,CAACW,UAAU,CAAEA,UAAW,CAACO,IAAI,CAAEhB,QAAS,CAACI,SAAS,CAAEA,SAAU,CAAE,CAAE,CAAE,CAAC,EACvI,CAAC,EACN,CAAC,CACA,CAAC,CAEb,CAEA,cAAe,CAAAP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}