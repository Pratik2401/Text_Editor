{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\reactjs\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport About from './component/About';\nimport { useState } from 'react';\nimport Navbar from './component/Navbar';\n// import TextForm from './component/TextForm';\nimport Alert from './component/Alert';\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [textMode, setTextMode] = useState('dark');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      setTextMode(\"light\");\n      document.body.style.backgroundColor = \"#212529\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = \"Text Editor-Dark Edition\";\n    } else {\n      setMode(\"light\");\n      setTextMode(\"dark\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", 'success');\n      document.title = \"Text Editor-Light Edition\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Text Editor\",\n      mode: mode,\n      toggleMode: toggleMode,\n      text: textMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-2\",\n      children: /*#__PURE__*/_jsxDEV(About, {\n        mode: mode,\n        toggleMode: toggleMode,\n        text: textMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"dCIWb6KWoCeHfaTmxsnwWmomC6k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["About","useState","Navbar","Alert","createBrowserRouter","RouterProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","textMode","setTextMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","children","text","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/Web Development/reactjs/src/App.js"],"sourcesContent":["import About from './component/About';\nimport { useState } from 'react';\nimport Navbar from './component/Navbar';\n// import TextForm from './component/TextForm';\nimport Alert from './component/Alert';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode]=useState('light')\n  const [textMode,setTextMode]=useState('dark')\n  const [alert,setAlert]=useState(null)\n  \n  const showAlert=(message,type)=>{\n    setAlert(\n      {\n        msg:message,\n        type:type\n      }\n    )\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode=()=>{\n    if(mode===\"light\")\n    {\n      setMode(\"dark\")\n      setTextMode(\"light\")\n      document.body.style.backgroundColor=\"#212529\"\n      showAlert(\"Dark Mode has been enabled\",\"success\");\n      document.title=\"Text Editor-Dark Edition\"\n\n    }\n    else{\n      setMode(\"light\")\n      setTextMode(\"dark\")\n      document.body.style.backgroundColor=\"white\"\n      showAlert(\"Light Mode has been enabled\", 'success');\n      document.title=\"Text Editor-Light Edition\"\n    }\n  }\n  return (\n    <>\n      <Navbar title=\"Text Editor\" mode={mode} toggleMode={toggleMode} text={textMode}/>\n      <Alert alert={alert}/>\n      {/* <div className=\"container\">\n        <TextForm heading=\"Enter Text Here\" mode={mode} toggleMode={toggleMode} text={textMode}  showAlert={showAlert} />\n      </div> */}\n      <div className=\"container my-2\">\n      \n      <About mode={mode} toggleMode={toggleMode} text={textMode}/>\n      </div>\n      \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,mBAAmB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,oBAAoB;AACvC;AACA,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SACEC,mBAAmB,EACnBC,cAAc,QACT,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACZ,QAAQ,CAAC,OAAO,CAAC;EACtC,MAAM,CAACa,QAAQ,EAACC,WAAW,CAAC,GAACd,QAAQ,CAAC,MAAM,CAAC;EAC7C,MAAM,CAACe,KAAK,EAACC,QAAQ,CAAC,GAAChB,QAAQ,CAAC,IAAI,CAAC;EAErC,MAAMiB,SAAS,GAACA,CAACC,OAAO,EAACC,IAAI,KAAG;IAC9BH,QAAQ,CACN;MACEI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CACF,CAAC;IACDE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMM,UAAU,GAACA,CAAA,KAAI;IACnB,IAAGX,IAAI,KAAG,OAAO,EACjB;MACEC,OAAO,CAAC,MAAM,CAAC;MACfE,WAAW,CAAC,OAAO,CAAC;MACpBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,SAAS;MAC7CT,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;MACjDM,QAAQ,CAACI,KAAK,GAAC,0BAA0B;IAE3C,CAAC,MACG;MACFf,OAAO,CAAC,OAAO,CAAC;MAChBE,WAAW,CAAC,MAAM,CAAC;MACnBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CT,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;MACnDM,QAAQ,CAACI,KAAK,GAAC,2BAA2B;IAC5C;EACF,CAAC;EACD,oBACErB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA,CAACL,MAAM;MAAC0B,KAAK,EAAC,aAAa;MAAChB,IAAI,EAAEA,IAAK;MAACW,UAAU,EAAEA,UAAW;MAACO,IAAI,EAAEhB;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjF3B,OAAA,CAACJ,KAAK;MAACa,KAAK,EAAEA;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAItB3B,OAAA;MAAK4B,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAE/BtB,OAAA,CAACP,KAAK;QAACY,IAAI,EAAEA,IAAK;QAACW,UAAU,EAAEA,UAAW;QAACO,IAAI,EAAEhB;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA,eAEN,CAAC;AAEP;AAACvB,EAAA,CAjDQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}